# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
<VirtualHost *:80>
    ServerName {{ site.get('ServerName') }}
    ServerAlias www.{{ site.get('ServerName') }}
    ServerAdmin webmaster@{{ site.get('ServerName') }}
    DocumentRoot /var/www/letsencrypt/{{ site.get('ServerName') }}

    ErrorLog ${APACHE_LOG_DIR}/error.{{ site.get('ServerName') }}.log
    CustomLog ${APACHE_LOG_DIR}/access.{{ site.get('ServerName') }}.log combined

    RewriteEngine on
    RewriteCond %{REQUEST_URI} !^/\.well\-known/acme\-challenge
    RewriteCond %{SERVER_NAME} ={{ site.get('ServerName') }} [OR]
    RewriteCond %{SERVER_NAME} =www.{{ site.get('ServerName') }}
    RewriteRule ^ https://{{ site.get('ServerName') }}%{REQUEST_URI} [END,QSA,R=permanent]
</VirtualHost>

<VirtualHost {{ site.get('interface') }}:443>
    ServerName {{ site.get('ServerName') }}
    ServerAlias www.{{ site.get('ServerName') }}
    ServerAdmin webmaster@{{ site.get('ServerName') }}
    DocumentRoot {{ site.get('DocumentRoot', '/var/www/html') }}

    ErrorLog ${APACHE_LOG_DIR}/error.{{ site.get('ServerName') }}.log
    CustomLog ${APACHE_LOG_DIR}/access.{{ site.get('ServerName') }}.log combined

    Include /etc/letsencrypt/options-ssl-apache.conf
    SSLCertificateFile {{ site.get('SSLCertificateFile') }}
    SSLCertificateKeyFile {{ site.get('SSLCertificateKeyFile') }}

    RewriteEngine on
    RewriteCond %{SERVER_NAME} =www.{{ site.get('ServerName') }}
    RewriteRule ^ https://{{ site.get('ServerName') }}%{REQUEST_URI} [END,QSA,R=permanent]

{%- if site.get('ExtraInclude') %}
    Include {{ site.get('ExtraInclude') }}
{%- endif %}

{%- if site.get('SSLProxyEngine') %}
    SSLProxyEngine {{ site.get('SSLProxyEngine') }}
{%- endif %}

{%- if site.get('LDAPGroup') %}
    <Location />
        AuthType basic
        AuthName "{{ site.get('AuthName', 'Login') }}"
        AuthBasicProvider ldap
        AuthLDAPURL ldap://ldap.sattler.io/ou=users,dc=ldap,dc=sattler,dc=io?uid
        Require ldap-group {{ site.get('LDAPGroup') }}
        AuthLDAPMaxSubGroupDepth 1

        RewriteCond %{REMOTE_USER} (.*)
        RewriteRule .* - [E=ENV_REMOTE_USER:%1]

        RequestHeader set X-Proxy_REMOTE-USER %{ENV_REMOTE_USER}e
        RequestHeader unset Authorization
    </Location>
{%- endif %}

{%- if site.get('ProxyPass') %}
    ProxyRequests Off
    ProxyPreserveHost On
    AllowEncodedSlashes On
    RequestHeader set X-Forwarded-Proto "https"

    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    ProxyPass / {{ site.get('ProxyPass') }}
    ProxyPassReverse / {{ site.get('ProxyPass') }}
{%- endif %}
</VirtualHost>
